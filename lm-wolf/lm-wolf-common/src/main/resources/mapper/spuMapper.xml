<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016. 杭州端点网络科技有限公司.  All rights reserved.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="Spu">
    <resultMap id="SpuMap" type="Spu">
        <id column="id" property="id"/>
        <result column="spu_code" property="spuCode"/>
        <result column="category_id" property="categoryId"/>
        <result column="brand_id" property="brandId"/>
        <result column="brand_name" property="brandName"/>
        <result column="name" property="name"/>
        <result column="main_image" property="mainImage"/>
        <result column="low_price" property="lowPrice"/>
        <result column="high_price" property="highPrice"/>
        <result column="stock_type" property="stockType"/>
        <result column="stock_quantity" property="stockQuantity"/>
        <result column="status" property="status"/>
        <result column="advertise" property="advertise"/>
        <result column="specification" property="specification"/>
        <result column="type" property="type"/>
        <result column="reduce_stock_type" property="reduceStockType"/>
        <result column="extra_json" property="extraJson"/>
        <result column="spu_info_md5" property="spuInfoMd5"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        parana_spus
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        spu_code, category_id,  brand_id, brand_name, name, main_image,
        low_price, high_price, stock_type, stock_quantity, status, advertise,
        specification, `type`, reduce_stock_type, extra_json, spu_info_md5,created_at, updated_at
    </sql>

    <sql id="vals">
        #{spuCode}, #{categoryId},  #{brandId}, #{brandName}, #{name}, #{mainImage},
        #{lowPrice},#{highPrice},#{stockType},#{stockQuantity}, #{status}, #{advertise},
        #{specification}, #{type}, #{reduceStockType}, #{extraJson},#{spuInfoMd5}, now(), now()
    </sql>


    <insert id="create" parameterType="Spu" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="SpuMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="SpuMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>


    <update id="update" parameterType="Spu">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="spuCode != null">spu_code = #{spuCode},</if>
            <if test="name != null">name = #{name},</if>
            <if test="brandId != null">brand_id = #{brandId},</if>
            <if test="brandName != null">brand_name = #{brandName},</if>
            <if test="mainImage != null">main_image = #{mainImage},</if>
            <if test="status != null">status = #{status},</if>
            <if test="stockQuantity != null">stock_quantity = #{stockQuantity},</if>
            <if test="highPrice != null">high_price = #{highPrice},</if>
            <if test="lowPrice != null">low_price = #{lowPrice},</if>
            <if test="specification != null">specification = #{specification},</if>
            <if test="advertise != null">advertise = #{advertise},</if>
            <if test="reduceStockType !=null">reduce_stock_type=#{reduceStockType},</if>
            <if test="type!=null">type=#{type},</if>
            <if test="extraJson != null">extra_json = #{extraJson},</if>
            <if test="spuInfoMd5!=null">spu_info_md5=#{spuInfoMd5},</if>
            updated_at=now()
        </set>
        WHERE id=#{id}
    </update>


    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <update id="updateStatus" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET status = #{status}, updated_at = now()
        WHERE id = #{id}
    </update>

    <update id="updateSpuInfoMd5" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET spu_info_md5 = #{spuInfoMd5}, updated_at = now()
        WHERE id = #{id}
    </update>

    <update id="updateExtras" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET
        extra_json = #{extraJson}, spu_info_md5 = #{spuInfoMd5}, updated_at = now()
        WHERE id = #{spuId}
    </update>

    <sql id="criteria">
        AND  status = 1
        <if test="name != null">AND name LIKE CONCAT('%', #{name} ,'%')</if>
        <if test="brandId != null">AND brand_id = #{brandId}</if>
    </sql>

    <select id="count" parameterType="map" resultType="long">
        SELECT
        count(1)
        FROM
        <include refid="tb"/>
        <where>
            category_id = #{categoryId}
            <include refid="criteria"/>
        </where>
    </select>


    <select id="paging" parameterType="map" resultMap="SpuMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            category_id = #{categoryId}
            <include refid="criteria"/>
        </where>
        LIMIT #{offset}, #{limit}
    </select>


    <select id="findByCode" parameterType="string" resultMap="SpuMap">
        SELECT * FROM
        <include refid="tb"/>
        WHERE spu_code=#{spuCode}
    </select>

    <select id="findByCategoryId" parameterType="long" resultMap="SpuMap">
        SELECT * FROM
        <include refid="tb"/>
        WHERE category_id=#{categoryId} AND status=1
    </select>

    <select id="findByCategoryIdAndFuzzName" parameterType="map" resultMap="SpuMap">
        SELECT * FROM
        <include refid="tb"/>
        WHERE category_id=#{categoryId} AND name LIKE CONCAT('%', #{name} ,'%') AND status=1
    </select>

    <select id="findByCategoryIdAndName" parameterType="map" resultMap="SpuMap">
        SELECT * FROM
        <include refid="tb"/>
        WHERE category_id=#{categoryId} AND status=1 AND name=#{name}
    </select>

</mapper>