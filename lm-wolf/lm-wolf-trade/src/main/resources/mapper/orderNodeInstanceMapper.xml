<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016. 杭州端点网络科技有限公司.  All rights reserved.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="OrderNodeInstance">
    <resultMap id="OrderNodeInstanceMap" type="OrderNodeInstance">
        <id column="id" property="id"/>
        <result column="fid" property="fid"/>
        <result column="first_node" property="firstNode"/>
        <result column="names" property="names"/>
        <result column="desc" property="desc"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <!--  订单流程节点实例表  -->
    <sql id="tb">
        parana_order_node_instances
    </sql>
    
    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>
    
    <sql id="cols_exclude_id">
        fid, first_node, `names`, `desc`, created_at, updated_at
    </sql>
    
    <sql id="vals">
        #{fid}, #{firstNode}, #{names}, #{desc}, now(), now()
    </sql>

    <sql id="criteria">
        <if test="startAt != null">AND <![CDATA[created_at >= #{startAt}]]> </if>
        <if test="endAt != null">AND <![CDATA[created_at < #{endAt}]]> </if>
    </sql>

    <insert id="create" parameterType="OrderNodeInstance" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="OrderNodeInstanceMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="OrderNodeInstanceMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!--  更新  -->
    <update id="update" parameterType="OrderNodeInstance">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="fid != null">fid = #{fid},</if>
            <if test="nodeInstanceId != null">node_instance_id = #{nodeInstanceId},</if>
            <if test="nextActionInstanceIds != null">next_action_instance_ids = #{nextActionInstanceIds},</if>
            <if test="extraJson != null">extra_json = #{extraJson},</if>
            <if test="tagsJson != null">tags_json = #{tagsJson},</if>
            updated_at=now()
        </set>
        WHERE id=#{id}
    </update>

    <!-- 删除 -->
    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <!--  查询记录数  -->
    <select id="count" parameterType="map" resultType="long">
        select count(1) from
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>


    <select id="getEntranceByFlowId" parameterType="long" resultMap="OrderNodeInstanceMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE fid = #{flowId} and first_node is TRUE
    </select>

    <!--  分页  -->
    <select id="paging" parameterType="map" resultMap="OrderNodeInstanceMap">
        select id,<include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        order by `id` desc
        limit #{offset}, #{limit}
    </select>

</mapper>
