<?xml version="1.0" encoding="UTF-8" ?>

<!--
  ~ Copyright (c) 2016. 杭州端点网络科技有限公司.  All rights reserved.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="SkuOrder">
    <resultMap id="SkuOrderMap" type="SkuOrder">
        <id property="id" column="id"/>
        <result property="originFee" column="origin_fee"/>
        <result property="fee" column="fee"/>
        <result property="discount" column="discount"/>
        <result property="shipFee" column="ship_fee"/>
        <result property="shipFeeDiscount" column="ship_fee_discount"/>
        <result property="integral" column="integral"/>
        <result property="balance" column="balance"/>
        <result property="saleTax" column="sale_tax"/>
        <result property="shipFeeSaleTax" column="ship_fee_sale_tax"/>
        <result property="buyerId" column="buyer_id"/>
        <result property="buyerName" column="buyer_name"/>
        <result property="outBuyerId" column="out_buyer_id"/>
        <result property="shopId" column="shop_id"/>
        <result property="shopName" column="shop_name"/>
        <result property="outShopId" column="out_shop_id"/>
        <result property="companyId" column="company_id"/>
        <result property="skuId" column="sku_id"/>
        <result property="outSkuId" column="out_sku_id"/>
        <result property="skuAttributes" column="sku_attributes"/>
        <result property="itemId" column="item_id"/>
        <result property="itemSnapshotId" column="item_snapshot_id"/>
        <result property="itemName" column="item_name"/>
        <result property="itemImage" column="item_image"/>
        <result property="outItemId" column="out_item_id"/>
        <result property="quantity" column="quantity"/>
        <result property="channel" column="channel"/>
        <result property="payType" column="pay_type"/>
        <result property="deliverType" column="deliver_type"/>
        <result property="parentId" column="parent_id"/>
        <result property="parentType" column="parent_type"/>
        <result property="flowId" column="flow_id"/>
        <result property="nodeInstanceId" column="node_instance_id"/>
        <result property="nextActionInstanceIds" column="next_action_instance_ids"/>
        <result property="type" column="type"/>
        <result property="outId" column="out_id"/>
        <result property="outFrom" column="out_from"/>
        <result property="extraJson" column="extra_json"/>
        <result property="tagsJson" column="tags_json"/>
        <result property="hasRefund" column="has_refund"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="tb">
        parana_sku_orders
    </sql>

    <sql id="cols_all">id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        parent_id,parent_type,flow_id,node_instance_id,next_action_instance_ids,`type`,out_id,out_from,
        extra_json,tags_json,origin_fee,fee,discount,ship_fee,ship_fee_discount,integral,balance,sale_tax,
        ship_fee_sale_tax,buyer_id,buyer_name,out_buyer_id,shop_id,shop_name,out_shop_id,
        company_id,sku_id,out_sku_id,sku_attributes,item_id,item_snapshot_id,item_name,item_image,out_item_id,
        quantity,deliver_type,channel,pay_type,has_refund,created_at,updated_at
    </sql>

    <sql id="values">
       #{parentId},#{parentType},#{flowId},#{nodeInstanceId},#{nextActionInstanceIds},#{type},#{outId},#{outFrom},
       #{extraJson},#{tagsJson},#{originFee},#{fee},#{discount},#{shipFee},#{shipFeeDiscount},#{integral},#{balance},#{saleTax},
       #{shipFeeSaleTax},#{buyerId},#{buyerName},#{outBuyerId},#{shopId},#{shopName},
       #{outShopId},#{companyId},#{skuId},#{outSkuId},#{skuAttributes},#{itemId},#{itemSnapshotId},
       #{itemName},#{itemImage},#{outItemId},#{quantity},#{deliverType},#{channel},#{payType},#{hasRefund},now(),now()
    </sql>

    <sql id="criteria">
        <if test="ids != null">AND id IN
            <foreach collection="ids" open="(" separator="," close=")" item="id">
                #{id}
            </foreach>
        </if>
        <if test="nids != null">AND node_instance_id IN
            <foreach collection="nids" open="(" separator="," close=")" item="nodeInstanceId">
                #{nodeInstanceId}
            </foreach>
        </if>
        <if test="parentId != null">AND parent_id = #{parentId}</if>
        <if test="buyerId != null">AND buyer_id = #{buyerId}</if>
        <if test="companyId != null">AND company_id = #{companyId}</if>
        <if test="outId != null">AND out_id = #{outId}</if>
        <if test="outBuyerId != null">AND out_buyer_id = #{outBuyerId}</if>
        <if test="hasRefund != null">AND has_refund = #{hasRefund}</if>
        <if test="startAt != null">AND <![CDATA[created_at >= #{startAt}]]> </if>
        <if test="endAt != null">AND <![CDATA[created_at < #{endAt}]]> </if>
    </sql>

    <select id="findByParentId" parameterType="map" resultMap="SkuOrderMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        where parent_id = #{parentId}
    </select>

    <select id="findByParentIds" parameterType="map" resultMap="SkuOrderMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        where parent_id in
        <foreach collection="list" open="(" separator="," close=")" item="parent_id">#{parent_id}</foreach>
    </select>

    <insert id="create" parameterType="SkuOrder" keyProperty="id" useGeneratedKeys="true">
        insert into
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        values (<include refid="values"/>)
    </insert>

    <update id="update" parameterType="SkuOrder">
        update
        <include refid="tb"/>
        <set>
            <if test="flowId!=null">flow_id = #{flowId},</if>
            <if test="nodeInstanceId!=null">node_instance_id = #{nodeInstanceId},</if>
            <if test="nextActionInstanceIds!=null">next_action_instance_ids = #{nextActionInstanceIds},</if>
            <if test="itemSnapshotId!=null">item_snapshot_id = #{itemSnapshotId},</if>
            <if test="extraJson!=null">extra_json = #{extraJson},</if>
            <if test="tagsJson!=null">tags_json = #{tagsJson},</if>
            <if test="hasRefund != null">has_refund = #{hasRefund},</if>
            updated_at = now()
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        delete from
        <include refid="tb"/>
        where id = #{id}
    </delete>

    <delete id="deletes">
        DELETE FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </delete>

    <select id="paging" parameterType="map" resultMap="SkuOrderMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        order by `id` desc
        limit #{offset}, #{limit}
    </select>

    <select id="count" parameterType="map" resultType="long">
        select count(1) from
        <include refid="tb"/>
        where 1=1
        <if test="buyerId!=null">AND buyer_id = #{buyerId}</if>
        <if test="shopId!=null">AND shop_id = #{shopId}</if>
    </select>

    <select id="findById" parameterType="long" resultMap="SkuOrderMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        where id = #{id}
    </select>


    <select id="findByIds" parameterType="long" resultMap="SkuOrderMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        where id in
        <foreach collection="list" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </select>

</mapper>