<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016. 杭州端点网络科技有限公司.  All rights reserved.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="Config">
    <resultMap id="ConfigMap" type="Config">
        <id column="id" property="id"/>
        <result column="biz_type" property="bizType"/>
        <result column="key" property="key"/>
        <result column="value" property="value"/>
        <result column="data_type" property="dataType"/>
        <result column="group" property="group"/>
        <result column="description" property="description"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        parana_configs
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        biz_type, `key`, `value`, data_type, `group`, description,
        created_at, updated_at
    </sql>

    <sql id="vals">
        #{bizType}, #{key}, #{value}, #{dataType}, #{group}, #{description},
        now(), now()
    </sql>

    <sql id="criteria">
        <if test="bizType != null">AND biz_type = #{bizType}</if>
        <if test="key != null">AND `key` = #{key}</if>
        <if test="dataType != null">AND data_type = #{dataType}</if>
        <if test="group != null">AND `group` = #{group}</if>
    </sql>

    <sql id="custom_sort_type">
        <if test="sortType != null">
            <if test="sortType == 1">ASC</if>
            <if test="sortType == 2">DESC</if>
        </if>

        <if test="sortType == null">
            ASC
        </if>
    </sql>

    <sql id="custom_sort">
        <if test="sortBy != null">
            <if test="sortBy == 'id'">ORDER BY id
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'key'">ORDER BY key
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'group'">ORDER BY group
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'bizType'">ORDER BY biz_type
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'dataType'">ORDER BY dataType
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'updatedAt'">ORDER BY updated_at
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'createdAt'">ORDER BY created_at
                <include refid="custom_sort_type"/>
            </if>
        </if>
        <if test="sortBy == null">
            order by id
        </if>
    </sql>


    <insert id="create" parameterType="Config" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <update id="update" parameterType="Config">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="bizType != null">biz_type = #{bizType},</if>
            <if test="key != null">`key` = #{key},</if>
            <if test="value != null">`value` = #{value},</if>
            <if test="dataType != null">data_type = #{dataType},</if>
            <if test="group != null">`group` = #{group},</if>
            <if test="description != null">description = #{description},</if>
            <if test="createdAt != null">created_at = #{updatedAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
            updated_at=now()
        </set>
        WHERE id=#{id}
    </update>

    <delete id="delete" parameterType="long" >
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="findById" parameterType="long" resultMap="ConfigMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByKey" parameterType="string" resultMap="ConfigMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE `key` = #{key}
        ORDER BY id ASC
    </select>

    <select id="findByBizType" parameterType="int" resultMap="ConfigMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE `biz_type` = #{bizType}
        ORDER BY id ASC
    </select>

    <select id="findByGroup" parameterType="string" resultMap="ConfigMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE `group` = #{group}
        ORDER BY id ASC
    </select>

    <select id="findByUniqueIndex" parameterType="map" resultMap="ConfigMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE biz_type = #{bizType} AND `key` = #{key}
    </select>

    <select id="findByCondition" parameterType="map" resultMap="ConfigMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        <include refid="custom_sort"/>
    </select>

    <select id="list" parameterType="int" resultMap="ConfigMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        ORDER BY id ASC
    </select>

    <select id="paging" parameterType="map" resultMap="ConfigMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        <include refid="custom_sort"/>
        LIMIT #{offset}, #{limit}
    </select>

</mapper>