<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016. 杭州端点网络科技有限公司.  All rights reserved.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="Item">
    <resultMap id="ItemMap" type="Item">
        <id column="id" property="id"/>
        <result column="item_code" property="itemCode"/>
        <result column="category_id" property="categoryId"/>
        <result column="spu_id" property="spuId"/>
        <result column="shop_id" property="shopId"/>
        <result column="shop_name" property="shopName"/>
        <result column="brand_id" property="brandId"/>
        <result column="brand_name" property="brandName"/>
        <result column="name" property="name"/>
        <result column="main_image" property="mainImage"/>
        <result column="low_price" property="lowPrice"/>
        <result column="high_price" property="highPrice"/>
        <result column="stock_type" property="stockType"/>
        <result column="stock_quantity" property="stockQuantity"/>
        <result column="sale_quantity" property="saleQuantity"/>
        <result column="status" property="status"/>
        <result column="on_shelf_at" property="onShelfAt"/>
        <result column="advertise" property="advertise"/>
        <result column="specification" property="specification"/>
        <result column="type" property="type"/>
        <result column="reduce_stock_type" property="reduceStockType"/>
        <result column="extra_json" property="extraJson"/>
        <result column="tags_json" property="tagsJson"/>
        <result column="item_info_md5" property="itemInfoMd5"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        parana_items
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        item_code, category_id, spu_id, shop_id, shop_name, brand_id, brand_name, name,
        main_image, low_price, high_price, stock_type,stock_quantity, sale_quantity, status,
        on_shelf_at, advertise, specification, `type`, reduce_stock_type, extra_json,tags_json,
        item_info_md5, created_at, updated_at
    </sql>

    <sql id="vals">
        #{itemCode}, #{categoryId}, #{spuId}, #{shopId}, #{shopName}, #{brandId}, #{brandName},
        #{name}, #{mainImage}, #{lowPrice},#{highPrice},#{stockType},#{stockQuantity},
        #{saleQuantity}, #{status}, #{onShelfAt},#{advertise}, #{specification}, #{type}, #{reduceStockType},
        #{extraJson}, #{tagsJson}, #{itemInfoMd5},now(), now()
    </sql>

    <sql id="criteria">
        <if test="ids != null">AND id IN
            <foreach collection="ids" open="(" separator="," close=")" item="id">#{id}</foreach>
        </if>
        <if test="name != null">AND name LIKE CONCAT(#{name} ,'%')</if>
        <if test="itemCode!=null">AND item_code = #{itemCode}</if>
        <if test="categoryId != null">AND category_id = #{categoryId}</if>
        <if test="spuId != null">AND spu_id = #{spuId}</if>
        <if test="shopId != null">AND shop_id = #{shopId}</if>
        <if test="brandId != null">AND brand_id = #{brandId}</if>
        <if test="status != null">AND status = #{status}</if>
        <if test="status == null"> AND `status`!=-3</if>
        <if test="type != null">AND `type` = #{type}</if>
        <if test="updatedFrom != null">AND <![CDATA[updated_at >= #{updatedFrom}]]> </if>
        <if test="updatedTo != null">AND <![CDATA[updated_at < #{updatedTo}]]> </if>
    </sql>

    <sql id="custom_sort_type">
        <if test="sortType != null">
            <if test="sortType == 1">ASC</if>
            <if test="sortType == 2">DESC</if>
        </if>
    </sql>

    <sql id="custom_sort">
        <if test="sortBy != null">
            <if test="sortBy == 'id'">ORDER BY id
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'price'">ORDER BY price
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'saleQuantity'">ORDER BY sale_quantity
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'onShelfAt'">ORDER BY on_shelf_at
                <include refid="custom_sort_type"/>
            </if>
            <if test="sortBy == 'updatedAt'">ORDER BY updated_at
                <include refid="custom_sort_type"/>
            </if>
        </if>
    </sql>


    <insert id="create" parameterType="Item" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <select id="findById" parameterType="long" resultMap="ItemMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="ItemMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>


    <update id="update" parameterType="Item">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="itemCode != null">item_code = #{itemCode},</if>
            <if test="name != null">name = #{name},</if>
            <if test="brandId != null">brand_id = #{brandId},</if>
            <if test="brandName != null">brand_name = #{brandName},</if>
            <if test="mainImage != null">main_image = #{mainImage},</if>
            <if test="status != null">status = #{status},</if>
            <if test="stockQuantity != null">stock_quantity = #{stockQuantity},</if>
            <if test="highPrice != null">high_price = #{highPrice},</if>
            <if test="lowPrice != null">low_price = #{lowPrice},</if>
            <if test="specification != null">specification = #{specification},</if>
            <if test="advertise != null">advertise = #{advertise},</if>
            <if test="reduceStockType !=null">reduce_stock_type=#{reduceStockType},</if>
            <if test="type!=null">type=#{type},</if>
            <if test="extraJson != null">extra_json = #{extraJson},</if>
            <if test="itemInfoMd5!=null">item_info_md5=#{itemInfoMd5},</if>
            updated_at=now()
        </set>
        WHERE id=#{id}
    </update>


    <update id="batchUpdateStatusByShopIdAndIds" parameterType="map">
        UPDATE
        <include refid="tb"/>
        <set>
            updated_at = now(),`status`=#{status}
        </set>
        WHERE
        shop_id=#{shopId} AND
        id IN
        <foreach item="id" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
        AND status!=-2     <!-- prevent frozen item to be set by seller -->
    </update>


    <update id="batchUpdateStatusByShopId" parameterType="map">
        UPDATE
        <include refid="tb"/>
        <set>
            updated_at = now(),`status`=#{status}
        </set>
        WHERE
        shop_id=#{shopId}
    </update>


    <update id="updateSaleQuantity" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET
        sale_quantity = sale_quantity + #{quantity},
        stock_quantity = stock_quantity - #{quantity},
        updated_at=now()
        WHERE id = #{itemId}
    </update>

    <update id="updateTags" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET
        tags_json = #{tagsJson}, item_info_md5 = #{itemInfoMd5}, updated_at = now()
        WHERE id = #{itemId}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <update id="updateStatus" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET status = #{status}, updated_at = now()
        WHERE id = #{id}
    </update>

    <update id="updateStatusByShopIdAndItemId" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET status = #{status}, updated_at = now()
        WHERE id = #{id}
        and shop_id=#{shopId}
        and status!=-2  <!-- prevent frozen item to be set by seller -->
    </update>

    <update id="updateItemInfoMd5" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET item_info_md5 = #{itemInfoMd5}, updated_at = now()
        WHERE id = #{id}
    </update>

    <update id="batchUpdateStatus" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET status = #{status}, updated_at = now()
        WHERE id IN
        <foreach item="id" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="ItemMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        <include refid="custom_sort"/>
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 将所有商品(排除逻辑删除的)变为冻结状态 -->
    <update id="frozenByShopIds" parameterType="list">
        UPDATE
        <include refid="tb"/>
        SET status = -2, updated_at = now()
        WHERE shop_id IN
        <foreach item="shopId" collection="list"
                 open="(" separator="," close=")">
            #{shopId}
        </foreach>
        AND status != -3
    </update>

    <!-- 解冻商品, 将冻结的商品变为下架 -->
    <update id="unFrozenByShopIds" parameterType="list">
        UPDATE
        <include refid="tb"/>
        SET status = -1, updated_at = now()
        WHERE shop_id IN
        <foreach item="shopId" collection="list"
                 open="(" separator="," close=")">
            #{shopId}
        </foreach>
        AND status = -2
    </update>

    <!-- for search -->
    <select id="maxId" resultType="long">
        SELECT MAX(id) FROM
        <include refid="tb"/>
    </select>


    <select id="listSince" resultMap="ItemMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE  <![CDATA[
          id < #{lastId} AND updated_at > #{since}
        ]]>
        ORDER BY id DESC LIMIT #{limit}
    </select>

    <select id="findByCode" parameterType="map" resultMap="ItemMap">
        SELECT * FROM
        <include refid="tb"/>
        WHERE item_code=#{itemCode} and `status` != -3
        <if test="shopId!=null">and shop_id=#{shopId}</if>
    </select>

    <select id="countOnShelfByShopId" parameterType="long" resultType="long">
        SELECT COUNT(1)
        FROM
        <include refid="tb"/>
        where shop_id=#{shopId} and `status`=1
    </select>

</mapper>