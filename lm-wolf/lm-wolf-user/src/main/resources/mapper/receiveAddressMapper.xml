<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ReceiveAddress">

	<resultMap id="ReceiveAddressMap" type="ReceiveAddress">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="receive_user_name" property="receiveUserName" />
		<result column="phone" property="phone" />
		<result column="mobile" property="mobile" />
		<result column="email" property="email" />
		<result column="is_default" property="isDefault" />
		<result column="status" property="status" />
		<result column="province" property="province" />
		<result column="province_id" property="provinceId" />
		<result column="city" property="city" />
		<result column="city_id" property="cityId" />
		<result column="region" property="region" />
		<result column="region_id" property="regionId" />
		<result column="street" property="street" />
		<result column="street_id" property="streetId" />
		<result column="detail" property="detail" />
		<result column="postcode" property="postcode" />
		<result column="created_at" property="createdAt" />
		<result column="updated_at" property="updatedAt" />
	</resultMap>

	<sql id="tb">
		parana_receive_addresses
	</sql>

	<sql id="cols_all">
		id,
		<include refid="cols_exclude_id" />
	</sql>

	<sql id="cols_exclude_id">
		user_id, receive_user_name, phone, mobile, email, is_default, status,
		province, province_id, city, city_id,
		region, region_id, street, street_id, detail, postcode, created_at,
		updated_at
	</sql>

	<sql id="vals">
		#{userId}, #{receiveUserName}, #{phone}, #{mobile}, #{email}, #{isDefault},
		#{status}, #{province}, #{provinceId},
		#{city}, #{cityId}, #{region}, #{regionId}, #{street}, #{streetId}, #{detail},
		#{postcode}, now(), now()
	</sql>

	<sql id="criteria">
		where 1 = 1
		<if test="id != null">AND id = #{id}</if>
		<if test="userId != null">AND user_id = #{userId}</if>
		<if test="receive_user_name">AND receive_user_name = #{receiveUserName}</if>
		<if test="phone != null">AND phone = #{phone}</if>
		<if test="mobile != null">AND mobile = #{mobile}</if>
		<if test="email != null">AND email = #{email}</if>
		<if test="isDefault != null">AND is_default = #{isDefault}</if>
		<if test="status != null">AND status = #{status}</if>
		<if test="province != null">AND province = #{province}</if>
		<if test="provinceId != null">AND province_id = #{provinceId}</if>
		<if test="city != null">AND city = #{city}</if>
		<if test="cityId != null">AND city_id = #{cityId}</if>
		<if test="region != null">AND region = #{region}</if>
		<if test="regionId != null">AND region_id = #{regionId}</if>
		<if test="street != null">AND street = #{street}</if>
		<if test="streetId != null">AND street_id = #{streetId}</if>
		<if test="detail != null">AND detail = #{detail}</if>
		<if test="postcode != null">AND postcode = #{postcode}</if>
	</sql>

	<insert id="create" parameterType="ReceiveAddress" keyProperty="id"
		useGeneratedKeys="true">
		INSERT INTO
		<include refid="tb" />
		(
		<include refid="cols_exclude_id" />
		)
		VALUES
		(
		<include refid="vals" />
		)
	</insert>

	<update id="update" parameterType="ReceiveAddress">
		UPDATE
		<include refid="tb" />
		<set>
			<if test="userId != null">user_id = #{userId},</if>
			<if test="receiveUserName">receive_user_name = #{receiveUserName},</if>
			<if test="phone != null">phone = #{phone},</if>
			<if test="mobile != null">mobile = #{mobile},</if>
			<if test="email != null">email = #{email},</if>
			<if test="isDefault != null">is_default = #{isDefault},</if>
			<if test="status != null">status = #{status},</if>
			<if test="province != null">province = #{province},</if>
			<if test="provinceId != null">province_id = #{provinceId},</if>
			<if test="city != null">city = #{city},</if>
			<if test="cityId != null">city_id = #{cityId},</if>
			<if test="region != null">region = #{region},</if>
			<if test="regionId != null">region_id = #{regionId},</if>
			<if test="street != null">street = #{street},</if>
			<if test="streetId != null">street_id = #{streetId},</if>
			<if test="detail != null">detail=#{detail},</if>
			<if test="postcode != null">postcode=#{postcode},</if>
			updated_at = now()
		</set>
		WHERE id = #{id}
	</update>

	<update id="deleteByAddressIdAndUserId" parameterType="map">
		UPDATE
		<include refid="tb" />
		SET status = -1, updated_at = now()
		WHERE id = #{addressId} AND user_id = #{userId}
	</update>

	<!-- éè¿ç¨æ·IDæ¥è¯¢æ¶è´§å°å -->
	<select id="findAddressByUserId" parameterType="long"
		resultMap="ReceiveAddressMap">
		SELECT id,
		<include refid="cols_exclude_id" />
		FROM
		<include refid="tb" />
		<where>
			user_id = #{userId} AND status = 1
		</where>
	</select>

	<select id="count" parameterType="map" resultType="long">
		SELECT count(1)
		FROM
		<include refid="tb" />
		<include refid="criteria" />
	</select>

	<select id="paging" parameterType="map">
		SELECT id,
		<include refid="cols_exclude_id" />
		FROM
		<include refid="tb" />
		<include refid="criteria" />
		LIMIT #{offet}, #{limit}
	</select>

	<update id="makeDefault" parameterType="map">
		UPDATE
		<include refid="tb" />
		SET is_default = TRUE, updated_at = now()
		WHERE id = #{addressId} AND user_id = #{userId}
	</update>

</mapper>