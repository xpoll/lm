<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="UserProfile">
	<resultMap id="UserProfileMap" type="UserProfile">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="realname" property="realName" />
		<result column="gender" property="gender" />
		<result column="province_id" property="provinceId" />
		<result column="province" property="province" />
		<result column="city_id" property="cityId" />
		<result column="city" property="city" />
		<result column="region_id" property="regionId" />
		<result column="region" property="region" />
		<result column="street" property="street" />
		<result column="extra_json" property="extraJson" />
		<result column="avatar" property="avatar" />
		<result column="birth" property="birth" />
		<result column="created_at" property="createdAt" />
		<result column="updated_at" property="updatedAt" />
	</resultMap>

	<sql id="tb">
		parana_user_profiles
	</sql>

	<sql id="cols_all">
		id,
		<include refid="cols_exclude_id" />
	</sql>

	<sql id="cols_exclude_id">
		user_id, realname, gender, province_id, province, city_id, city, region_id,
		region, street, extra_json, avatar, birth, created_at, updated_at
	</sql>

	<sql id="vals">
		#{userId}, #{realName}, #{gender}, #{provinceId}, #{province}, #{cityId},
		#{city}, #{regionId}, #{region}, #{street}, #{extraJson}, #{avatar},
		#{birth}, now(), now()
	</sql>

	<insert id="create" parameterType="UserProfile" keyProperty="id"
		useGeneratedKeys="true">
		INSERT INTO
		<include refid="tb" />
		(
		<include refid="cols_exclude_id" />
		)
		VALUES
		(
		<include refid="vals" />
		)
	</insert>

	<delete id="delete" parameterType="long">
		delete from
		<include refid="tb" />
		where id=#{id}
	</delete>

	<delete id="deleteByUserId" parameterType="long">
		delete from
		<include refid="tb" />
		where user_id=#{userId}
	</delete>

	<select id="findByUserId" parameterType="long" resultMap="UserProfileMap">
		SELECT
		<include refid="cols_all" />
		FROM
		<include refid="tb" />
		WHERE user_id = #{userId} LIMIT 1
	</select>

	<select id="findById" parameterType="long" resultMap="UserProfileMap">
		SELECT
		<include refid="cols_all" />
		FROM
		<include refid="tb" />
		WHERE id = #{id}
	</select>

	<select id="findByIds" parameterType="list" resultMap="UserProfileMap">
		SELECT
		<include refid="cols_all" />
		FROM
		<include refid="tb" />
		WHERE id IN
		<foreach item="id" collection="list" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</select>

	<update id="update" parameterType="UserProfile">
		UPDATE
		<include refid="tb" />
		<set>
			<if test="realName != null"> realname = #{realName}, </if>
			<if test="gender != null"> gender = #{gender}, </if>
			<if test="provinceId != null"> province_id = #{provinceId}, </if>
			<if test="province != null"> province = #{province}, </if>
			<if test="cityId != null"> city_id = #{cityId}, </if>
			<if test="city != null"> city = #{city}, </if>
			<if test="regionId != null"> region_id = #{regionId}, </if>
			<if test="region != null"> region = #{region}, </if>
			<if test="street != null"> street = #{street}, </if>
			<if test="avatar != null"> avatar = #{avatar}, </if>
			<if test="birth != null"> birth = #{birth}, </if>
			updated_at=now()
		</set>
		WHERE user_id=#{userId}
	</update>

</mapper>