<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2016 杭州端点网络科技有限公司
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="UserDevice">

    <resultMap id="UserDeviceMap" type="UserDevice">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="device_token" property="deviceToken"/>
        <result column="device_type" property="deviceType"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        parana_user_devices
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
      user_id, `user_name`, device_token, device_type, created_at, updated_at
    </sql>

    <sql id="vals">
        #{userId}, #{userName}, #{deviceToken}, #{deviceType}, now(), now()
    </sql>

    <sql id="criteria">
        <if test="userId != null">AND user_id = #{userId}</if>
        <if test="deviceToken != null">AND device_token = #{deviceToken}</if>
        <if test="deviceType != null">AND device_type = #{deviceType}</if>
    </sql>

    <insert id="create" parameterType="UserDevice" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>

    <update id="update" parameterType="UserDevice">
        UPDATE
        <include refid="tb"/>
        SET
        <if test="userId != null">user_id = #{userId},</if>
        <if test="userName != null">user_name = #{userName},</if>
        <if test="deviceToken != null">device_token = #{deviceToken},</if>
        <if test="deviceType != null">device_type = #{deviceType},</if>
        updated_at = now()
        WHERE id = #{id}
    </update>

    <select id="findById" parameterType="long" resultMap="UserDeviceMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>

    <select id="findByIds" parameterType="list" resultMap="UserDeviceMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE
        id in
        <foreach collection="list" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT count(1)
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="UserDeviceMap">
        SELECT id,
        <include refid="cols_exclude_id"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        LIMIT #{offset}, #{limit}
    </select>

    <select id="findByUserId" parameterType="long" resultMap="UserDeviceMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE `user_id` = #{userId}
    </select>

    <select id="findByDeviceToken" parameterType="map" resultMap="UserDeviceMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE `device_token` = #{deviceToken}
    </select>

    <delete id="delete" parameterType="long">
        delete from
        <include refid="tb"/>
        where id = #{id}
    </delete>

    <delete id="deleteByDeviceToken" parameterType="map">
        delete from
        <include refid="tb"/>
        where `device_token` = #{deviceToken}
    </delete>

    <delete id="deleteByUserIdAndDeviceType" parameterType="map">
        delete from
        <include refid="tb"/>
        where `user_id` = #{userId} AND `device_type` = #{deviceType}
    </delete>
</mapper>