<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2014 杭州端点网络科技有限公司
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="UserFile">
    <resultMap id="UserFileMap" type="UserFile">
        <id column="id" property="id"/>
        <result column="create_by" property="createBy"/>
        <result column="file_type" property="fileType"/>
        <result column="group" property="group"/>
        <result column="folder_id" property="folderId"/>
        <result column="name" property="name"/>
        <result column="path" property="path"/>
        <result column="size" property="size"/>
        <result column="extra" property="extra"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        parana_user_files
    </sql>

    <sql id="cols_all">
      id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
      create_by, file_type, `group`, folder_id, name, path, size, extra, created_at, updated_at
    </sql>

    <sql id="vals">
        #{createBy}, #{fileType}, #{group}, #{folderId}, #{name}, #{path}, #{size}, #{extra}, now(), now()
    </sql>

    <sql id="criteria">
        WHERE 1 = 1
        <if test="fileType != null"> AND file_type = #{fileType}</if>
        <if test="group != null"> AND `group` = #{group}</if>
        <if test="name != null"> AND name like CONCAT('%', #{name} ,'%')</if>
        <if test="folderId != null"> AND folder_id = #{folderId}</if>
        <if test="createBy != null"> AND create_by = #{createBy}</if>
    </sql>

    <select id="findById" parameterType="long" resultMap="UserFileMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <insert id="create" parameterType="UserFile" keyProperty="id" useGeneratedKeys="true">
      INSERT INTO
      <include refid="tb" />
      (<include refid="cols_exclude_id" />)
      VALUES
      (<include refid="vals" />)
    </insert>

    <update id="update" parameterType="UserFile">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="fileType != null">file_type = #{fileType},</if>
            <if test="group != null">`group`= #{group},</if>
            <if test="folderId != null">folder_id = #{folderId},</if>
            <if test="name != null">name = #{name},</if>
            <if test="path != null">path = #{path},</if>
            <if test="size != null">size = #{size},</if>
            <if test="extra != null">extra = #{extra},</if>
            updated_at=now()
        </set>
        WHERE id=#{id}
    </update>

    <select id="list" parameterType="map" resultMap="UserFileMap">
        SELECT <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <where>
            <if test="fileType != null"> and file_type = #{fileType}</if>
            <if test="createBy!=null"> and create_by=#{createBy} </if>
            <if test="folderId!=null"> and folder_id=#{folderId}</if>
            <if test="group!=null"> and `group`=#{group} </if>
            <if test="name!=null">and name=#{name}</if>
        </where>
        order by created_at desc
    </select>

    <!-- 计数 -->
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM <include refid="tb"/>
        <include refid="criteria"/>
    </select>

    <!-- 分页查询 -->
    <select id="paging" parameterType="map" resultMap="UserFileMap">
        SELECT
        <include refid="cols_all"/>
        FROM <include refid="tb"/>
        <include refid="criteria"/>
        ORDER BY id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb" />
        WHERE id = #{id}
    </delete>

    <delete id="deleteByFolderId" parameterType="long">
        DELETE FROM <include refid="tb" />
        WHERE folder_id = #{folderId}
    </delete>
</mapper>