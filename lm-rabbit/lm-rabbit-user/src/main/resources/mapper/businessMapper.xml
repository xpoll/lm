<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="Business">

    <resultMap id="BusinessMap" type="Business">
        <id column="id" property="id"/>
        <result column="business_name" property="businessName"/>
        <result column="type" property="type"/>
        <result column="extra_json" property="extraJson"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="description" property="description"/>
        <result column="business_link" property="businessLink"/>
        <result column="img" property="img"/>
    </resultMap>

    <sql id="tb">
        galaxy_businesses
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
      business_name, `type`, extra_json, created_at, updated_at, img, description, business_link
    </sql>

    <sql id="cols_if_exist_select">
        <if test="business.id != null">
            id = #{business.id}
        </if>
        <if test="business.businessName != null">
            AND business_name = #{business.businessName}
        </if>
        <if test="business.type != null">
            AND type = #{business.type}
        </if>
        <if test="business.extraJson != null">
            AND extra_json = #{business.extraJson}
        </if>
        <if test="business.img != null">
            AND img = #{business.img}
        </if>
        <if test="business.description != null">
            AND description = #{business.description}
        </if>
        <if test="business.businessLink != null">
            AND business_link = #{business.businessLink}
        </if>
    </sql>
    <sql id="cols_if_exist_update">
        <if test="change.businessName != null">
            business_name = #{change.businessName},
        </if>
        <if test="change.type != null">
            type = #{change.type},
        </if>
        <if test="change.extraJson != null">
            extra_json = #{change.extraJson},
        </if>
        <if test="change.img != null">
            img = #{change.img},
        </if>
        <if test="change.description != null">
            description = #{change.description},
        </if>
        <if test="change.businessLink != null">
            business_link = #{change.businessLink},
        </if>
        updated_at = now()
    </sql>
    <sql id="vals">
        #{businessName}, #{type}, #{extraJson}, now(), now(), #{img}, #{description}, #{businessLink}
    </sql>

    <select id="select" parameterType="map" resultMap="BusinessMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="cols_if_exist_select"/>
        </where>
        <if test="pageIndex != null and pageSize != null">
            limit #{pageIndex},#{pageSize}
        </if>

    </select>

    <insert id="insert" parameterType="Business" keyColumn="id" useGeneratedKeys="true">
        INSERT
        INTO<include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES(<include refid="vals"/> )
    </insert>

    <delete id="delete" parameterType="map">
        DELETE FROM <include refid="tb"/>
        <where>
            <include refid="cols_if_exist_select"/>
        </where>
    </delete>

    <update id="update" parameterType="map">
        UPDATE <include refid="tb"/>
        <set>
              <include refid="cols_if_exist_update"/>
        </set>
        <where>
            <include refid="cols_if_exist_select"/>
        </where>
    </update>
    <select id="findByIds"  resultMap="BusinessMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <if test="list != null">
                id IN
                <foreach collection="list" item="item"  open="(" close=")" separator="," index="index">
                    #{item}
                </foreach>
            </if>
            <if test="list == null">
                FALSE
            </if>
        </where>
    </select>

    <select id="count" parameterType="map" resultType="long">
        SELECT
        COUNT(1)
        FROM
        <include refid="tb"/>
        <where>
            <include refid="cols_if_exist_select"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="BusinessMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        <where>
            <include refid="cols_if_exist_select"/>
        </where>
        order by updated_at desc
        limit #{offset}, #{limit}
    </select>

</mapper>
